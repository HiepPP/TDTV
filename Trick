// count length of viewbag
(Enumerable.Count(ViewBag.ComicName) < 100)


// When fileupload too large
<system.webServer>
   <security>
      <requestFiltering>
         <requestLimits maxAllowedContentLength="1073741824" />
      </requestFiltering>
   </security>
 </system.webServer>
 
 
 //2 ways to get a select item on dropdownlist with Js
 1) $('select#ElementId').val();
 2) $('#ElementId option:selected').val();


//Getting the HTTP Referrer
Request.UrlReferrer


//Get url( controller and action name)
var path = string.Format("/{0}/{1}/", ViewContext.RouteData.Values["controller"], ViewContext.RouteData.Values["action"]).ToLower();

//Format datetime
@subjDetail.BilledDate.Value.ToString("dd/MM/yyyy")


//If value nullable but add a value null
listvalue.Add(CheckboxValue.GetValueOrDefault());


//Is checkbox checked?
 if ($('#LostDiploma').is(":checked"))

//Submit button outside form
<form method="get" action="something.php">
     <input type="text" name="name" />
     <input type="submit" id="submit-form" class="hidden" />
</form>
<label for="submit-form">Submit</label>


///Submit button outside form by JQ
 $('#btnsubmit').click(function() {
                $('#formsubmit').submit();
            });


///Removing header when printing
<a href="#"  onclick="window.print()" onmouseup="document.getElementById('header').style.display=’None’;document.getElementById(‘footer’).style.display=’None'”> Print </a>
Or
<script>
    document.write("<div id='header1'><div id='header-inner1'><button type='button' " +
        "onClick='window.print()'" + "onmouseup='document.getElementById('header').style.display ='None';document.getElementById('footer').style.display ='None'' " +
        "class='printbutton pull-right' >" +
        "<i class='fa fa-print fa-2x'></i></button></div></div>");
</script>
AND
@media print {
    #Header, #Footer { display: none !important; }
}


///Load default date when document ready
 if ($('#EndDate').val() == "")
            {
                var date = moment(); //Get the current date
                var r= date.format("DD/MM/YYYY");
                $('#EndDate').val(r);
            }
///Submit list of checked box
var acceptHs = function() {
            count = 0;
            var stringlst = '';
            var chklst = $('.checklist');
            //var chklst = document.getElementsByName('checklist');
            for (var k = 0; k < chklst.length; k++) {
                if (chklst[k].checked) {
                    stringlst = stringlst + " " + chklst[k].value;
                }
                $('#hiddenLst').val(stringlst);
            }
            $('#formList').submit();
        }
string[] lstvalue = lst.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);

///Set seletecd value for dropdownlist then disable
 $('#BankId option[value='+value+']').attr('selected', 'selected');
                            $('#BankId').prop('disabled', true);
=> Enable before submit
  $("#BankId").removeAttr("disabled");
  
///Convert datetime to string without time
var datestring = datePicker.Value.ToShortDateString();

//Check if file request do not have
 if (Request.Files.Count > 0)
                {
                    if (Request.Files[0].ContentLength <= 0)
                    {
                        model.EnclosedFile = null;
                    }
// Join list to string
list<string> lst = new List<String>();
 string.Join(", ", level.ToArray());

// List to string
lst.Aggregate(string.Empty(), (current, item) => current + " ," + item);

//sub a number from a string
Regex.Match(rpbook.CategoryNo, @"\d+").Value)

//Work with dictionary
+ Dictionary<string, int> save = new Dictionary<string, int>();
+ Check if exist, change value
if (save.ContainsKey(findlevel))
                {
                    //save = save.ToDictionary(x => x.Key, x => x.Value + 1);
                    save[findlevel] += 1;
                }
                else
                {
                    save.Add(findlevel,1);
                }
+ join: List<string> lststring = save.Select(item => $"{item.Value}{item.Key}").ToList();


///Return json on api
 public JsonResult test() 
    {
        var result = new JsonResult();
        result.Data = new
        {
             id = 1
         };
        result.JsonRequestBehavior = JsonRequestBehavior.AllowGet;
        return result;
    }


///Get Current Area Name in View or Controller
HttpContext.Current.Request.RequestContext.RouteData.DataTokens["area"]
