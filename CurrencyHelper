public sealed class CurrencyHelper
	{
		public static string Say(string number)
		{
			try
			{
				var so_tien = Convert.ToDouble(number);
				// Warning!!! Optional parameters not supported
				string KetQua = "";
				string SoTien;
				string Nhom;
				string Chu = "";
				string Dich;
				string S1;
				string S2;
				string S3;
				byte i;
				byte J;
				int S;
				string[] Hang;
				string[] Doc;
				string[] Dem;
				if ((so_tien == 0))
				{
					return "0 (không) đồng";
				}
				else if ((Math.Abs(so_tien) >= 1E+15))
				{
					return "Số lớn quá mức lưu trữ. Xin hãy kiểm tra lại";
				}
				else
				{
					if ((so_tien < 0))
					{
						KetQua = "âm ";
						so_tien = Math.Abs(so_tien);
					}

					SoTien = (so_tien * 1000).ToString();
					SoTien = SoTien.PadLeft(18, (' '));
					Hang = new string[] {
	 "None", "trăm", "mươi", "gì đó"};
					Doc = new string[] {
	 "triệu tỷ", "nghìn tỷ", "tỷ", "triệu", "nghìn", "đồng", "xu"};
					Dem = new string[] {
	 "None", "một", "hai", "ba", "bốn", "năm", "sáu", "bảy", "tám", "chín"};
					for (i = 1; (i < 7); i++)
					{
						Nhom = SoTien.Substring(((i * 3) - 3), 3);
						if ((Nhom != "   "))
						{
							switch (Nhom)
							{
								case "000":
									if ((i == 5))
										Chu = "đồng ";
									else
										Chu = "";
									break;
								case ".00":
									Chu = "chẵn";
									break;
								default:
									S1 = Nhom.Substring(0, 1);
									S2 = Nhom.Substring(1, 1);
									S3 = Nhom.Substring((Nhom.Length - 1));
									Chu = "";
									Hang[3] = Doc[i];
									for (J = 1; (J < 4); J++)
									{
										Dich = "";
										S = (Nhom.Substring((J - 1), 1).CInt());
										if ((S > 0))
										{
											Dich = (Dem[S] + (" " + (Hang[J] + " ")));
										}
										if (((J == 2) && (S == 1)))
										{
											Dich = ("mười" + " ");
										}
										else if (((J == 3) && (S == 0) && (Nhom != "  0")))
										{
											Dich = (Hang[J] + " ");
										}
										else if (((J == 3) && ((S == 5) && ((S2 != " ") && (S2 != "0")))))
										{
											Dich = ("l" + Dich.Substring(1));
										}
										else if (((J == 2) && ((S == 0) && (S3 != "0"))))
										{
											if ((((S1.CInt() >= 1) && (S1.CInt() <= 9)) || ((S1.CInt() == 0) && (i == 4))))
												Dich = ("lẻ ");
										}

										Chu = (Chu + Dich);
									}

									break;
							}
							Chu = Chu.Replace("mười một", "mười một ");
							Chu = Chu.Replace("mươi một", "mươi mốt");
							Chu = Chu.Replace("mươi bốn", "mươi tư");
							KetQua = (KetQua + Chu);
						}

					}

				}

				var result = (KetQua.Substring(0, 1) + KetQua.Substring(1));
				if ((result.Length > 0))
				{
					result = (result.Substring(0, 1).ToUpper() + result.Substring(1).Trim());
				}
				if (!result.EndsWith("chẵn", StringComparison.OrdinalIgnoreCase))
					result += " chẵn";
				if (result.StartsWith("Lẻ ", StringComparison.OrdinalIgnoreCase))
				{
					result = result.Substring(3);
					result = result.First().ToString().ToUpper() + result.Substring(1);
				}
				return result;
			}
			catch (Exception ex)
			{ }
			return "";
		}
	}
